/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BAS_L 0
#define EXT_L 1
#define NUM_L 2
#define NAV_L 3
#define SYS_L 4

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace

&lt { quick_tap_ms = <200>; };

/ {
    chosen { zmk,matrix_transform = &ortho_transform; };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <EXT_L NUM_L>;
            then-layer = <SYS_L>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <
&kp TAB    &kp Q  &kp W      &kp E     &kp R  &kp T                 &kp Y      &kp U  &kp I          &kp O    &kp P     &kp BACKSPACE
&kp ESC    &kp A  &kp S      &kp D     &kp F  &kp G                 &kp H      &kp J  &kp K          &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X      &kp C     &kp V  &kp B                 &kp N      &kp M  &kp COMMA      &kp DOT  &kp FSLH  &kp RET
                  &kp LCTRL  &kp LALT  &mo 1  &kp SPACE  &kp SPACE  &mo NUM_L  &mo 4  &kp RIGHT_ALT
            >;
        };

        ext_layer {
            label = "Ext";
            bindings = <
&kp TILDE   &kp EXCLAMATION  &kp AT_SIGN   &kp HASH   &kp DOLLAR  &kp PERCENT          &kp CARET  &kp AMPERSAND   &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DEL
&kp DELETE  &kp F1           &kp F2        &kp F3     &kp F4      &kp F5               &kp F6     &kp UNDERSCORE  &kp PLUS      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE
&kp LANG1   &kp F7           &kp F8        &kp F9     &kp F10     &kp F11              &kp F12    &kp LS(NUHS)    &kp LS(NUBS)  &kp HOME              &kp END                &trans
                             &kp LEFT_GUI  &kp LANG2  &trans      &trans       &trans  &trans     &trans          &trans
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
&kp GRAVE   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5         &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9      &kp NUMBER_0       &kp BACKSPACE
&kp DELETE  &kp F1        &kp F2        &kp F3        &kp F4        &kp F5               &kp F6        &kp MINUS     &kp EQUAL     &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BSLH
&trans      &kp F7        &kp F8        &kp F9        &kp F10       &kp F11              &kp F12       &kp NUHS      &kp NUBS      &kp PAGE_UP       &kp PAGE_DOWN      &trans
                          &trans        &trans        &trans        &none         &none  &trans        &trans        &trans
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
&trans  &trans  &trans  &trans        &trans  &trans          &kp PRINTSCREEN  &trans          &kp UP_ARROW    &trans           &kp PAGE_UP  &kp PAGE_DOWN
&trans  &trans  &trans  &trans        &trans  &trans          &trans           &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans       &trans
&trans  &trans  &trans  &trans        &trans  &trans          &trans           &trans          &trans          &trans           &trans       &trans
                &trans  &kp LEFT_GUI  &trans  &trans  &trans  &trans           &trans          &trans
            >;
        };

        sys_layer {
            label = "Sys";
            bindings = <
&bt BT_CLR  &trans        &trans        &trans        &trans        &trans                &trans  &trans         &trans         &bootloader    &trans         &sys_reset
&trans      &trans        &trans        &trans        &trans        &trans                &trans  &trans         &trans         &trans         &trans         &trans
&trans      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4          &trans  &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4
                          &trans        &trans        &trans        &trans        &trans  &trans  &trans         &trans
            >;
        };
    };
};
